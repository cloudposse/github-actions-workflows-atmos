name: |-
  Main branch workflow
  
  Build, test Docker image, deploy it to EKS `dev` environment and draft new release  
  
  ### Usage 
  
  Create in your repo  __`.github/workflows/main.yaml`__
  
  ```yaml
    name: Main Branch
    on:
      push:
        branches: [ master ]
    
    permissions:
      contents: write
      id-token: write
    
    jobs:
      do:
        uses: cloudposse/github-actions-workflows-docker-ecr-eks-helmfile/.github/workflows/main-branch.yml@main
        with:
          organization: "$\{\{ github.event.repository.owner.login \}\}"
          repository: "$\{\{ github.event.repository.name \}\}"
        secrets:
          github-private-actions-pat: "$\{\{ secrets.PUBLIC_REPO_ACCESS_TOKEN \}\}"
          registry: "$\{\{ secrets.ECR_REGISTRY \}\}"
          secret-outputs-passphrase: "$\{\{ secrets.GHA_SECRET_OUTPUT_PASSPHRASE \}\}"
          ecr-region: "$\{\{ secrets.ECR_REGION \}\}"
          ecr-iam-role: "$\{\{ secrets.ECR_IAM_ROLE \}\}"
  ```

on:
  workflow_call:
    inputs:
      organization:
        description: "Repository owner organization (ex. acme for repo acme/example)"
        required: false
        default: ${{ github.event.repository.owner.login }}
        type: string
      repository:
        description: "Repository name (ex. example for repo acme/example)"
        required: false
        default: ${{ github.event.repository.name }}
        type: string
    secrets:
      secret-outputs-passphrase:
        description: "Passphrase to encrypt/decrypt secret outputs with gpg. For more information [read](https://github.com/cloudposse/github-action-secret-outputs)"
        required: true
      registry:
        description: "ECR ARN"
        required: true
      github-private-actions-pat:
        description: "Github PAT allow to pull private repos"
        required: true
      ecr-region:
        description: "ECR AWS region"
        required: true
      ecr-iam-role:
        description: "IAM Role ARN provide ECR write/read access"
        required: true

permissions:
  contents: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  stacks:
    uses: cloudposse/github-actions-workflows/.github/workflows/controller-atmos-affected-stacks.yml@main

  deploy:
    needs: [ stacks ]
    if: ${{ needs.stacks.outputs.has-affected-stacks == 'true' }}
    strategy:
      matrix: ${{ fromJson(needs.stacks.outputs.stacks) }}
    name: deploy draft ${{ matrix.stack_slug }}
    uses: cloudposse/github-actions-workflows/.github/workflows/cd-atmos-stack-deploy.yml@main
    with:
      ref: ${{ github.event.pull_request.head.sha }}
      default-branch: ${{ github.event.repository.default_branch }}
      stack: ${{ matrix.stack }}
      component: ${{ matrix.component }}
      component_path: ${{ matrix.component_path }}
      environment: ${{ matrix.stack_slug }}-draft
      stack_slug: ${{ matrix.stack_slug }}
    secrets:
      environments_github_token: ${{ secrets.DEPLOYMENTS_GITHUB_TOKEN }}


